
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.brevy.spring.cxf.ws.services.fc.calculator.impl;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.brevy.spring.cxf.ws.services.fc.calculator.CalculatorPortType;

/**
 * This class was generated by Apache CXF 2.7.5
 * 2013-05-30T17:30:59.332+08:00
 * Generated source version: 2.7.5
 * 
 */
@Component("calculatorService")
@javax.jws.WebService(
                      serviceName = "CalculatorService",
                      portName = "CalculatorPort",
                      targetNamespace = "http://cxf.spring.brevy.com/services/FC/Calculator",
                      endpointInterface = "com.brevy.spring.cxf.ws.services.fc.calculator.CalculatorPortType")
                      
public class CalculatorPortTypeImpl implements CalculatorPortType {

    private transient Logger log = LoggerFactory.getLogger(this.getClass());

    /* (non-Javadoc)
     * @see com.brevy.spring.cxf.ws.services.fc.calculator.CalculatorPortType#divide(java.math.BigDecimal  param1 ,)java.math.BigDecimal  param2 ,)com.brevy.spring.cxf.ws.services.fc.calculator.SettingsCType  settings )*
     */
    public java.math.BigDecimal divide(java.math.BigDecimal param1,java.math.BigDecimal param2,com.brevy.spring.cxf.ws.services.fc.calculator.SettingsCType settings) { 
        log.info("Executing operation divide");
        try {
           return param1.divide(param2, settings.getScale(), settings.getRoundingMode());
        } catch (java.lang.Exception ex) {
           throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.brevy.spring.cxf.ws.services.fc.calculator.CalculatorPortType#add(java.math.BigDecimal  param1 ,)java.math.BigDecimal  param2 ,)com.brevy.spring.cxf.ws.services.fc.calculator.SettingsCType  settings )*
     */
    public java.math.BigDecimal add(java.math.BigDecimal param1,java.math.BigDecimal param2,com.brevy.spring.cxf.ws.services.fc.calculator.SettingsCType settings) { 
    	log.info("Executing operation add");
        try {
            return param1.add(param2).setScale(settings.getScale(), settings.getRoundingMode());
        } catch (java.lang.Exception ex) {
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.brevy.spring.cxf.ws.services.fc.calculator.CalculatorPortType#minus(java.math.BigDecimal  param1 ,)java.math.BigDecimal  param2 ,)com.brevy.spring.cxf.ws.services.fc.calculator.SettingsCType  settings )*
     */
    public java.math.BigDecimal minus(java.math.BigDecimal param1,java.math.BigDecimal param2,com.brevy.spring.cxf.ws.services.fc.calculator.SettingsCType settings) { 
    	log.info("Executing operation minus");
        try {
        	return param1.add(param2.negate()).setScale(settings.getScale(), settings.getRoundingMode());
        } catch (java.lang.Exception ex) {
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.brevy.spring.cxf.ws.services.fc.calculator.CalculatorPortType#multiply(java.math.BigDecimal  param1 ,)java.math.BigDecimal  param2 ,)com.brevy.spring.cxf.ws.services.fc.calculator.SettingsCType  settings )*
     */
    public java.math.BigDecimal multiply(java.math.BigDecimal param1,java.math.BigDecimal param2,com.brevy.spring.cxf.ws.services.fc.calculator.SettingsCType settings) { 
    	log.info("Executing operation multiply");
        try {
            return param1.multiply(param2).setScale(settings.getScale(), settings.getRoundingMode());
        } catch (java.lang.Exception ex) {
            throw new RuntimeException(ex);
        }
    }

}
